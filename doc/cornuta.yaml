openapi: 3.1.0
info:
  title: Cornuta
  description: |+
    Proof-of-Concept text encryption using rotating substitution cipher.
  version: 2.0.1
  contact:
    name: fer1035
    url: https://github.com/fer1035s
    email: ferdaus@warpedlenses.com
  license:
    name: GNU General Public License v2.0 or later
    url: https://www.gnu.org/licenses/old-licenses/gpl-2.0-standalone.html
servers:
  - url: https://api.warpedlenses.com/cornuta
    description: URL
paths:
  /text:
    post:
      summary: Encrypt and Decrypt
      description: Encrypt clear text, or decrypt previously encrypted text using a key.
      operationId: encryptDecrypt
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StandardRequest'
            examples:
              MyName:
                $ref: '#/components/examples/MyName'
      responses:
        '200':
          description: Successful
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/StandardResponse'
              example:
                status: Gak45 305to26 Aii p6q0y
                request_id: e4deb6d1-5743-4ead-8b7c-79477d362435
                status_code: 200
        '400':
          description: Invalid request body
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/StandardError'
              example:
                message: Invalid request body
        '403':
          description: Invalid API key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StandardError'
              example:
                message: Forbidden
        '500':
          description: Internal server error
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/StandardError'
              example:
                message: Internal server error
security:
        - ApiKeyAuth: []
components:
  schemas:
    StandardRequest:
      type: object
      properties:
        key:
          type: string
        task:
          type: string
        msg:
          type: string
      required:  
        - key
        - task
        - msg
    StandardError:
      type: object
      properties:
        message:
          type: string
    StandardResponse:
      type: object
      properties:
        status:
          type: string
        request_id:
          type: string
        status_code:
          type: integer
  examples:
    MyName:
      summary: Encrypting my name
      value:
        key: mykunci
        task: '1'
        msg: Ahmad Ferdaus Abd Razak
  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: header
      name: X-API-Key
